%!PS-Adobe-2.0 EPSF-2.0
%%Title: tr-gprs-poor.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Jun  6 13:18:09 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tr-gprs-poor.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (duy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  6 13:18:09 2007)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
780 600 M
( 0) Rshow
1.000 UL
LTb
900 1067 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 10) Rshow
1.000 UL
LTb
900 1533 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 20) Rshow
1.000 UL
LTb
900 2000 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 30) Rshow
1.000 UL
LTb
900 2467 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 40) Rshow
1.000 UL
LTb
900 2933 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 50) Rshow
1.000 UL
LTb
900 3400 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 60) Rshow
1.000 UL
LTb
900 3867 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 70) Rshow
1.000 UL
LTb
900 4333 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 80) Rshow
1.000 UL
LTb
900 4800 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 90) Rshow
1.000 UL
LTb
900 600 M
0 63 V
0 4137 R
0 -63 V
900 400 M
( 0) Cshow
1.000 UL
LTb
1496 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 10) Cshow
1.000 UL
LTb
2092 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 20) Cshow
1.000 UL
LTb
2688 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 30) Cshow
1.000 UL
LTb
3284 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 40) Cshow
1.000 UL
LTb
3880 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 50) Cshow
1.000 UL
LTb
4476 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 60) Cshow
1.000 UL
LTb
5072 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 70) Cshow
1.000 UL
LTb
5668 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 80) Cshow
1.000 UL
LTb
6264 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 90) Cshow
1.000 UL
LTb
6860 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
900 4800 N
900 600 L
5960 0 V
0 4200 V
-5960 0 V
Z stroke
LCb setrgbcolor
200 2700 M
currentpoint gsave translate 90 rotate 0 0 M
(Sequence Number) Cshow
grestore
LTb
LCb setrgbcolor
3880 100 M
(Time, s) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1620 4637 M
(data) Rshow
LT0
948 600 Pls
1011 642 Pls
1011 684 Pls
1135 726 Pls
1135 768 Pls
1156 810 Pls
1156 852 Pls
1289 894 Pls
1289 936 Pls
1291 978 Pls
1291 1020 Pls
1352 1062 Pls
1352 1104 Pls
1354 1146 Pls
1354 1188 Pls
1421 1230 Pls
1421 1272 Pls
1503 1314 Pls
1503 1356 Pls
1505 1398 Pls
1505 1440 Pls
1507 1482 Pls
1507 1524 Pls
1611 1566 Pls
1611 1608 Pls
1678 1650 Pls
1678 1692 Pls
1679 1734 Pls
1679 1776 Pls
1738 1818 Pls
1738 1860 Pls
1740 1902 Pls
1740 1944 Pls
1798 1986 Pls
1798 2028 Pls
1800 2070 Pls
1800 2112 Pls
1867 2154 Pls
1867 2196 Pls
1869 2238 Pls
1869 2280 Pls
1932 2322 Pls
1932 2364 Pls
1935 2406 Pls
1946 2448 Pls
2005 1482 Pls
2278 1608 Pls
2278 1734 Pls
2403 1776 Pls
2403 1944 Pls
2406 2028 Pls
2406 2070 Pls
2536 2112 Pls
2536 2238 Pls
2538 2280 Pls
2538 2322 Pls
2541 2490 Pls
2541 2532 Pls
2601 2574 Pls
2601 2616 Pls
2604 2658 Pls
2604 2700 Pls
2616 2742 Pls
2616 2784 Pls
2692 2826 Pls
2692 2868 Pls
2694 2910 Pls
2696 2952 Pls
2755 2994 Pls
2757 3036 Pls
2803 3078 Pls
2864 3120 Pls
2864 3162 Pls
2866 3204 Pls
2938 3246 Pls
2939 3288 Pls
3010 3330 Pls
3020 3372 Pls
3022 3414 Pls
3077 3456 Pls
3077 3498 Pls
3078 3540 Pls
3119 3582 Pls
3121 3624 Pls
3138 3666 Pls
3196 3708 Pls
3198 3750 Pls
3244 3792 Pls
3246 3834 Pls
3342 3876 Pls
3342 3918 Pls
3409 3960 Pls
3411 4002 Pls
3413 4044 Pls
3413 4086 Pls
3473 4128 Pls
3536 4170 Pls
3538 4212 Pls
3601 4254 Pls
3603 3666 Pls
3828 4086 Pls
3889 4296 Pls
3908 4338 Pls
3955 600 Pls
3958 642 Pls
3958 684 Pls
4030 726 Pls
4032 768 Pls
4098 810 Pls
4117 852 Pls
4117 894 Pls
4119 936 Pls
4193 978 Pls
4195 1020 Pls
4257 1062 Pls
4267 1104 Pls
4329 1146 Pls
4404 1188 Pls
4404 1230 Pls
4406 1272 Pls
4406 1314 Pls
4468 1356 Pls
4470 1398 Pls
4495 1440 Pls
4572 1482 Pls
4636 1524 Pls
4638 1566 Pls
4640 1608 Pls
4700 1650 Pls
4700 1692 Pls
4705 1734 Pls
4765 1776 Pls
4767 1818 Pls
4779 1860 Pls
4883 1902 Pls
4883 1944 Pls
4885 1986 Pls
4934 2028 Pls
4936 2070 Pls
4997 1650 Pls
5174 2112 Pls
5176 2154 Pls
5255 2196 Pls
5257 2238 Pls
5259 2280 Pls
5259 2322 Pls
5351 2364 Pls
5353 2406 Pls
5426 2154 Pls
5551 2196 Pls
5551 2448 Pls
5708 2490 Pls
5710 2532 Pls
5815 2574 Pls
5815 2616 Pls
5817 2658 Pls
5893 2700 Pls
5895 2742 Pls
5895 2784 Pls
5962 2826 Pls
5964 2868 Pls
6033 2910 Pls
6035 2952 Pls
6035 2994 Pls
6099 3036 Pls
6154 3078 Pls
6156 3120 Pls
6171 3162 Pls
6231 3204 Pls
6232 3246 Pls
6232 3288 Pls
6243 3330 Pls
6377 3372 Pls
6377 3414 Pls
6453 3456 Pls
6459 3498 Pls
6527 3540 Pls
6529 3582 Pls
6529 3624 Pls
6592 3666 Pls
6594 3708 Pls
6657 3750 Pls
6659 3792 Pls
6718 3834 Pls
6720 3876 Pls
2011 4637 Pls
1.000 UP
1.000 UL
LT1
LTb
1620 4437 M
(acks) Rshow
LT1
1008 600 Box
1008 600 Box
1500 936 Box
1500 936 Box
1502 978 Box
1502 978 Box
1504 1020 Box
1504 1020 Box
1608 1062 Box
1608 1062 Box
1675 1104 Box
1675 1104 Box
1676 1146 Box
1676 1146 Box
1735 1188 Box
1735 1188 Box
1737 1230 Box
1737 1230 Box
1795 1272 Box
1795 1272 Box
1797 1314 Box
1797 1314 Box
1864 1356 Box
1864 1356 Box
1866 1398 Box
1866 1398 Box
1929 1440 Box
1929 1440 Box
1932 1440 Box
1932 1440 Box
1943 1440 Box
1943 1440 Box
2002 1440 Box
2002 1440 Box
2004 1440 Box
2004 1440 Box
2016 1440 Box
2016 1440 Box
2083 1440 Box
2083 1440 Box
2086 1440 Box
2086 1440 Box
2089 1440 Box
2089 1440 Box
2146 1440 Box
2146 1440 Box
2161 1440 Box
2161 1440 Box
2165 1440 Box
2165 1440 Box
2250 1440 Box
2250 1440 Box
2272 1440 Box
2272 1440 Box
2275 1566 Box
2275 1566 Box
2400 1692 Box
2400 1692 Box
2403 1734 Box
2403 1734 Box
2533 1902 Box
2533 1902 Box
2535 1986 Box
2535 1986 Box
2538 2028 Box
2538 2028 Box
2598 2070 Box
2598 2070 Box
2601 2196 Box
2601 2196 Box
2613 2238 Box
2613 2238 Box
1133 642 Box
1133 642 Box
2689 2280 Box
2689 2280 Box
2691 2448 Box
2691 2448 Box
2693 2490 Box
2693 2490 Box
2752 2532 Box
2752 2532 Box
2754 2574 Box
2754 2574 Box
2800 2616 Box
2800 2616 Box
2861 2700 Box
2861 2700 Box
2863 2742 Box
2863 2742 Box
2935 2784 Box
2935 2784 Box
2936 2826 Box
2936 2826 Box
3007 2868 Box
3007 2868 Box
3017 2910 Box
3017 2910 Box
3019 2952 Box
3019 2952 Box
3074 2994 Box
3074 2994 Box
3076 3036 Box
3076 3036 Box
3116 3078 Box
3116 3078 Box
3118 3120 Box
3118 3120 Box
3135 3162 Box
3135 3162 Box
3193 3204 Box
3193 3204 Box
3195 3246 Box
3195 3246 Box
3241 3288 Box
3241 3288 Box
3243 3330 Box
3243 3330 Box
1153 684 Box
1153 684 Box
3339 3414 Box
3339 3414 Box
3406 3456 Box
3406 3456 Box
3408 3498 Box
3408 3498 Box
3410 3540 Box
3410 3540 Box
3470 3582 Box
3470 3582 Box
3533 3624 Box
3533 3624 Box
3535 3624 Box
3535 3624 Box
3598 3624 Box
3598 3624 Box
3600 3624 Box
3600 3624 Box
3672 3624 Box
3672 3624 Box
3675 3624 Box
3675 3624 Box
3736 3624 Box
3736 3624 Box
3739 3624 Box
3739 3624 Box
3751 3624 Box
3751 3624 Box
3822 3624 Box
3822 3624 Box
3825 3624 Box
3825 3624 Box
3886 3624 Box
3886 3624 Box
3905 3624 Box
3905 3624 Box
3952 3624 Box
3952 3624 Box
3955 4044 Box
3955 4044 Box
4027 4254 Box
4027 4254 Box
4029 4296 Box
4029 4296 Box
4095 4338 Box
4095 4338 Box
4114 600 Box
4114 600 Box
4116 642 Box
4116 642 Box
4190 684 Box
4190 684 Box
4192 726 Box
4192 726 Box
4254 768 Box
4254 768 Box
4264 810 Box
4264 810 Box
4326 852 Box
4326 852 Box
4401 936 Box
4401 936 Box
4403 978 Box
4403 978 Box
4465 1020 Box
4465 1020 Box
4467 1062 Box
4467 1062 Box
1286 726 Box
1286 726 Box
1288 768 Box
1288 768 Box
4492 1104 Box
4492 1104 Box
4569 1146 Box
4569 1146 Box
4633 1188 Box
4633 1188 Box
4635 1230 Box
4635 1230 Box
4637 1272 Box
4637 1272 Box
4697 1314 Box
4697 1314 Box
4702 1356 Box
4702 1356 Box
4762 1398 Box
4762 1398 Box
4764 1440 Box
4764 1440 Box
4776 1482 Box
4776 1482 Box
4880 1566 Box
4880 1566 Box
4882 1608 Box
4882 1608 Box
4931 1608 Box
4931 1608 Box
4933 1608 Box
4933 1608 Box
4994 1608 Box
4994 1608 Box
4996 1608 Box
4996 1608 Box
5045 1608 Box
5045 1608 Box
5047 1608 Box
5047 1608 Box
1349 810 Box
1349 810 Box
1351 852 Box
1351 852 Box
5106 1608 Box
5106 1608 Box
5171 1608 Box
5171 1608 Box
5173 1608 Box
5173 1608 Box
5252 1608 Box
5252 1608 Box
5254 2070 Box
5254 2070 Box
5256 2112 Box
5256 2112 Box
5348 2112 Box
5348 2112 Box
5350 2112 Box
5350 2112 Box
5423 2112 Box
5423 2112 Box
5425 2112 Box
5425 2112 Box
5487 2112 Box
5487 2112 Box
5548 2154 Box
5548 2154 Box
1418 894 Box
1418 894 Box
5705 2406 Box
5705 2406 Box
5707 2448 Box
5707 2448 Box
5812 2490 Box
5812 2490 Box
5814 2532 Box
5814 2532 Box
5890 2574 Box
5890 2574 Box
5892 2616 Box
5892 2616 Box
5959 2658 Box
5959 2658 Box
5961 2700 Box
5961 2700 Box
6030 2742 Box
6030 2742 Box
6032 2784 Box
6032 2784 Box
6096 2826 Box
6096 2826 Box
6151 2868 Box
6151 2868 Box
6153 2910 Box
6153 2910 Box
6168 2952 Box
6168 2952 Box
6228 2994 Box
6228 2994 Box
6229 3036 Box
6229 3036 Box
6240 3078 Box
6240 3078 Box
6374 3162 Box
6374 3162 Box
6450 3204 Box
6450 3204 Box
6456 3246 Box
6456 3246 Box
6524 3288 Box
6524 3288 Box
6526 3330 Box
6526 3330 Box
6589 3372 Box
6589 3372 Box
6591 3414 Box
6591 3414 Box
6654 3456 Box
6654 3456 Box
6656 3498 Box
6656 3498 Box
6715 3540 Box
6715 3540 Box
6717 3582 Box
6717 3582 Box
6786 3624 Box
6786 3624 Box
900 4800 Box
2011 4437 Box
1.000 UP
1.000 UL
LT2
1.000 UL
LTb
900 4800 N
900 600 L
5960 0 V
0 4200 V
-5960 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
