%!PS-Adobe-2.0 EPSF-2.0
%%Title: tr-gprs-medioc.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Jun  6 13:18:08 2007
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tr-gprs-medioc.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (duy)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  6 13:18:08 2007)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
900 600 M
63 0 V
5897 0 R
-63 0 V
780 600 M
( 0) Rshow
1.000 UL
LTb
900 1067 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 10) Rshow
1.000 UL
LTb
900 1533 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 20) Rshow
1.000 UL
LTb
900 2000 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 30) Rshow
1.000 UL
LTb
900 2467 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 40) Rshow
1.000 UL
LTb
900 2933 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 50) Rshow
1.000 UL
LTb
900 3400 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 60) Rshow
1.000 UL
LTb
900 3867 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 70) Rshow
1.000 UL
LTb
900 4333 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 80) Rshow
1.000 UL
LTb
900 4800 M
63 0 V
5897 0 R
-63 0 V
-6017 0 R
( 90) Rshow
1.000 UL
LTb
900 600 M
0 63 V
0 4137 R
0 -63 V
900 400 M
( 0) Cshow
1.000 UL
LTb
1496 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 10) Cshow
1.000 UL
LTb
2092 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 20) Cshow
1.000 UL
LTb
2688 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 30) Cshow
1.000 UL
LTb
3284 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 40) Cshow
1.000 UL
LTb
3880 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 50) Cshow
1.000 UL
LTb
4476 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 60) Cshow
1.000 UL
LTb
5072 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 70) Cshow
1.000 UL
LTb
5668 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 80) Cshow
1.000 UL
LTb
6264 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 90) Cshow
1.000 UL
LTb
6860 600 M
0 63 V
0 4137 R
0 -63 V
0 -4337 R
( 100) Cshow
1.000 UL
LTb
1.000 UL
LTb
900 4800 N
900 600 L
5960 0 V
0 4200 V
-5960 0 V
Z stroke
LCb setrgbcolor
200 2700 M
currentpoint gsave translate 90 rotate 0 0 M
(Sequence Number) Cshow
grestore
LTb
LCb setrgbcolor
3880 100 M
(Time, s) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
LTb
1620 4637 M
(data) Rshow
LT0
948 600 Pls
1011 642 Pls
1011 684 Pls
1101 726 Pls
1101 768 Pls
1103 810 Pls
1103 852 Pls
1184 894 Pls
1184 936 Pls
1186 978 Pls
1186 1020 Pls
1196 1062 Pls
1196 1104 Pls
1260 1146 Pls
1260 1188 Pls
1262 1230 Pls
1262 1272 Pls
1326 1314 Pls
1326 1356 Pls
1392 1398 Pls
1392 1440 Pls
1398 1482 Pls
1398 1524 Pls
1455 1566 Pls
1455 1608 Pls
1457 1650 Pls
1457 1692 Pls
1511 1734 Pls
1511 1776 Pls
1530 1818 Pls
1530 1860 Pls
1531 1902 Pls
1531 1944 Pls
1594 1986 Pls
1594 2028 Pls
1596 2070 Pls
1596 2112 Pls
1610 2154 Pls
1610 2196 Pls
1673 2238 Pls
1673 2280 Pls
1675 2322 Pls
1675 2364 Pls
1713 2406 Pls
1713 2448 Pls
1715 2490 Pls
1762 2532 Pls
1764 1524 Pls
2129 1524 Pls
2205 1650 Pls
2205 1692 Pls
2285 1734 Pls
2285 1776 Pls
2298 1860 Pls
2298 1902 Pls
2298 1944 Pls
2298 1986 Pls
2367 2028 Pls
2420 2070 Pls
2486 2112 Pls
2489 2154 Pls
2489 2196 Pls
2489 2238 Pls
2489 2280 Pls
2492 2322 Pls
2604 2364 Pls
2650 2406 Pls
2650 2448 Pls
2650 2490 Pls
2650 2532 Pls
2653 2574 Pls
2728 2616 Pls
2728 2658 Pls
2728 2700 Pls
2775 2742 Pls
2824 2784 Pls
2841 2826 Pls
2907 2868 Pls
2959 2910 Pls
2961 2952 Pls
2965 2994 Pls
2965 3036 Pls
3034 3078 Pls
3035 3120 Pls
3038 3162 Pls
3098 3204 Pls
3102 3246 Pls
3163 3288 Pls
3165 3330 Pls
3207 3372 Pls
3207 3414 Pls
3211 3456 Pls
3226 3498 Pls
3287 3540 Pls
3289 3582 Pls
3337 3624 Pls
3338 3666 Pls
3353 3708 Pls
3414 3750 Pls
3414 3792 Pls
3416 3834 Pls
3462 3876 Pls
3464 3918 Pls
3512 3960 Pls
3514 4002 Pls
3570 4044 Pls
3577 4086 Pls
3593 4128 Pls
3649 4170 Pls
3658 4212 Pls
3658 4254 Pls
3699 4296 Pls
3701 4338 Pls
3753 600 Pls
3793 642 Pls
3813 684 Pls
3815 726 Pls
3879 768 Pls
3891 810 Pls
3941 852 Pls
3944 894 Pls
3944 936 Pls
4005 978 Pls
4011 1020 Pls
4053 1062 Pls
4055 1104 Pls
4106 1146 Pls
4108 1188 Pls
4120 1230 Pls
4178 1272 Pls
4180 1314 Pls
4235 1356 Pls
4237 1398 Pls
4290 1440 Pls
4290 1482 Pls
4303 1524 Pls
4315 1566 Pls
4367 1608 Pls
4369 1650 Pls
4428 1692 Pls
4430 1734 Pls
4475 1776 Pls
4477 1818 Pls
4495 1860 Pls
4549 1902 Pls
4579 1944 Pls
4581 1986 Pls
4581 2028 Pls
4659 2070 Pls
4661 2112 Pls
4663 2154 Pls
4724 2196 Pls
4735 2238 Pls
4738 1650 Pls
4932 2028 Pls
4951 2280 Pls
5009 2322 Pls
5011 2364 Pls
5058 2406 Pls
5058 2448 Pls
5060 2490 Pls
5108 2532 Pls
5110 2574 Pls
5163 2616 Pls
5163 2658 Pls
5172 2700 Pls
5176 2742 Pls
5239 2784 Pls
5241 2826 Pls
5251 2868 Pls
5316 2910 Pls
5318 2952 Pls
5318 2994 Pls
5330 3036 Pls
5393 3078 Pls
5394 3120 Pls
5415 3162 Pls
5475 3204 Pls
5477 3246 Pls
5520 3288 Pls
5560 3330 Pls
5562 3372 Pls
5562 3414 Pls
5584 3456 Pls
5641 3498 Pls
5646 3540 Pls
5658 3582 Pls
5720 3624 Pls
5726 3666 Pls
5732 3708 Pls
5790 3750 Pls
5793 3792 Pls
5793 3834 Pls
5852 3876 Pls
5854 3918 Pls
5908 3960 Pls
5910 4002 Pls
5969 4044 Pls
5971 4086 Pls
6022 4128 Pls
6024 4170 Pls
6034 4212 Pls
6091 4254 Pls
6093 4296 Pls
6093 4338 Pls
6153 600 Pls
6155 642 Pls
6205 684 Pls
6207 726 Pls
6268 768 Pls
6269 810 Pls
6274 852 Pls
6333 894 Pls
6335 936 Pls
6410 978 Pls
6420 1020 Pls
6420 1062 Pls
6461 1104 Pls
6463 1146 Pls
6533 1188 Pls
6537 1230 Pls
6540 1272 Pls
6600 1314 Pls
6602 1356 Pls
6657 1398 Pls
6659 1440 Pls
6686 1482 Pls
6698 1524 Pls
6752 1566 Pls
6753 1608 Pls
6753 1650 Pls
6815 1692 Pls
6817 1734 Pls
2011 4637 Pls
1.000 UP
1.000 UL
LT1
LTb
1620 4437 M
(acks) Rshow
LT1
1008 600 Box
1008 600 Box
1508 1146 Box
1508 1146 Box
1527 1188 Box
1527 1188 Box
1528 1230 Box
1528 1230 Box
1591 1272 Box
1591 1272 Box
1593 1314 Box
1593 1314 Box
1607 1356 Box
1607 1356 Box
1670 1398 Box
1670 1398 Box
1672 1440 Box
1672 1440 Box
1710 1482 Box
1710 1482 Box
1712 1482 Box
1712 1482 Box
1759 1482 Box
1759 1482 Box
1761 1482 Box
1761 1482 Box
1821 1482 Box
1821 1482 Box
1824 1482 Box
1824 1482 Box
1896 1482 Box
1896 1482 Box
1901 1482 Box
1901 1482 Box
1904 1482 Box
1904 1482 Box
1959 1482 Box
1959 1482 Box
1967 1482 Box
1967 1482 Box
1980 1482 Box
1980 1482 Box
2033 1482 Box
2033 1482 Box
2036 1482 Box
2036 1482 Box
2047 1482 Box
2047 1482 Box
2202 1608 Box
2202 1608 Box
2282 1650 Box
2282 1650 Box
2295 1818 Box
2295 1818 Box
2364 1818 Box
2364 1818 Box
2369 1818 Box
2369 1818 Box
2417 1860 Box
2417 1860 Box
2483 1902 Box
2483 1902 Box
2486 2070 Box
2486 2070 Box
2489 2070 Box
2489 2070 Box
2550 2070 Box
2550 2070 Box
2553 2070 Box
2553 2070 Box
2598 2112 Box
2598 2112 Box
2601 2154 Box
2601 2154 Box
2647 2322 Box
2647 2322 Box
2650 2322 Box
2650 2322 Box
2660 2322 Box
2660 2322 Box
1098 642 Box
1098 642 Box
1100 684 Box
1100 684 Box
2723 2322 Box
2723 2322 Box
2725 2448 Box
2725 2448 Box
2772 2448 Box
2772 2448 Box
2774 2448 Box
2774 2448 Box
2821 2532 Box
2821 2532 Box
2822 2532 Box
2822 2532 Box
2838 2574 Box
2838 2574 Box
2904 2616 Box
2904 2616 Box
2956 2658 Box
2956 2658 Box
2958 2700 Box
2958 2700 Box
2962 2742 Box
2962 2742 Box
3031 2784 Box
3031 2784 Box
3032 2826 Box
3032 2826 Box
3035 2868 Box
3035 2868 Box
3095 2910 Box
3095 2910 Box
3099 2952 Box
3099 2952 Box
3160 2994 Box
3160 2994 Box
3162 3036 Box
3162 3036 Box
3204 3078 Box
3204 3078 Box
3208 3120 Box
3208 3120 Box
3223 3162 Box
3223 3162 Box
1181 726 Box
1181 726 Box
1183 768 Box
1183 768 Box
1193 810 Box
1193 810 Box
3284 3204 Box
3284 3204 Box
3286 3246 Box
3286 3246 Box
3334 3288 Box
3334 3288 Box
3335 3330 Box
3335 3330 Box
3350 3372 Box
3350 3372 Box
3411 3414 Box
3411 3414 Box
3413 3456 Box
3413 3456 Box
3459 3498 Box
3459 3498 Box
3461 3540 Box
3461 3540 Box
3509 3582 Box
3509 3582 Box
3511 3624 Box
3511 3624 Box
3567 3666 Box
3567 3666 Box
3574 3708 Box
3574 3708 Box
3590 3750 Box
3590 3750 Box
3646 3792 Box
3646 3792 Box
3655 3834 Box
3655 3834 Box
3696 3876 Box
3696 3876 Box
3698 3918 Box
3698 3918 Box
3750 3960 Box
3750 3960 Box
3790 4002 Box
3790 4002 Box
3810 4044 Box
3810 4044 Box
3812 4086 Box
3812 4086 Box
3876 4128 Box
3876 4128 Box
1257 852 Box
1257 852 Box
3888 4170 Box
3888 4170 Box
3938 4212 Box
3938 4212 Box
3941 4254 Box
3941 4254 Box
4002 4296 Box
4002 4296 Box
4008 4338 Box
4008 4338 Box
4050 600 Box
4050 600 Box
4052 642 Box
4052 642 Box
4103 684 Box
4103 684 Box
4105 726 Box
4105 726 Box
4117 768 Box
4117 768 Box
4175 810 Box
4175 810 Box
4177 852 Box
4177 852 Box
4232 894 Box
4232 894 Box
4234 936 Box
4234 936 Box
4287 978 Box
4287 978 Box
4300 1020 Box
4300 1020 Box
4312 1062 Box
4312 1062 Box
4364 1104 Box
4364 1104 Box
4366 1146 Box
4366 1146 Box
4425 1188 Box
4425 1188 Box
4427 1230 Box
4427 1230 Box
4472 1272 Box
4472 1272 Box
4474 1314 Box
4474 1314 Box
1259 894 Box
1259 894 Box
4492 1356 Box
4492 1356 Box
4546 1398 Box
4546 1398 Box
4576 1440 Box
4576 1440 Box
4578 1482 Box
4578 1482 Box
4656 1524 Box
4656 1524 Box
4658 1566 Box
4658 1566 Box
4660 1608 Box
4660 1608 Box
4721 1608 Box
4721 1608 Box
4732 1608 Box
4732 1608 Box
4735 1608 Box
4735 1608 Box
4795 1608 Box
4795 1608 Box
4797 1608 Box
4797 1608 Box
4853 1608 Box
4853 1608 Box
4855 1608 Box
4855 1608 Box
4905 1608 Box
4905 1608 Box
4910 1608 Box
4910 1608 Box
4929 1608 Box
4929 1608 Box
4948 1608 Box
4948 1608 Box
5006 1608 Box
5006 1608 Box
5008 1608 Box
5008 1608 Box
5055 1986 Box
5055 1986 Box
5057 2238 Box
5057 2238 Box
1323 936 Box
1323 936 Box
5105 2280 Box
5105 2280 Box
5107 2322 Box
5107 2322 Box
5160 2364 Box
5160 2364 Box
5169 2406 Box
5169 2406 Box
5173 2448 Box
5173 2448 Box
5236 2490 Box
5236 2490 Box
5238 2532 Box
5238 2532 Box
5248 2574 Box
5248 2574 Box
5313 2616 Box
5313 2616 Box
5315 2658 Box
5315 2658 Box
5327 2700 Box
5327 2700 Box
5390 2742 Box
5390 2742 Box
5392 2784 Box
5392 2784 Box
5412 2826 Box
5412 2826 Box
5472 2868 Box
5472 2868 Box
5474 2910 Box
5474 2910 Box
5517 2952 Box
5517 2952 Box
5557 2994 Box
5557 2994 Box
5559 3036 Box
5559 3036 Box
5581 3078 Box
5581 3078 Box
5638 3120 Box
5638 3120 Box
5643 3162 Box
5643 3162 Box
5655 3204 Box
5655 3204 Box
1389 978 Box
1389 978 Box
1395 1020 Box
1395 1020 Box
5717 3246 Box
5717 3246 Box
5723 3288 Box
5723 3288 Box
5729 3330 Box
5729 3330 Box
5787 3372 Box
5787 3372 Box
5790 3414 Box
5790 3414 Box
5849 3456 Box
5849 3456 Box
5851 3498 Box
5851 3498 Box
5905 3540 Box
5905 3540 Box
5907 3582 Box
5907 3582 Box
5966 3624 Box
5966 3624 Box
5968 3666 Box
5968 3666 Box
6019 3708 Box
6019 3708 Box
6021 3750 Box
6021 3750 Box
6031 3792 Box
6031 3792 Box
6088 3834 Box
6088 3834 Box
6090 3876 Box
6090 3876 Box
6150 3918 Box
6150 3918 Box
6152 3960 Box
6152 3960 Box
6202 4002 Box
6202 4002 Box
6204 4044 Box
6204 4044 Box
1452 1062 Box
1452 1062 Box
1454 1104 Box
1454 1104 Box
6265 4086 Box
6265 4086 Box
6266 4128 Box
6266 4128 Box
6271 4170 Box
6271 4170 Box
6330 4212 Box
6330 4212 Box
6332 4254 Box
6332 4254 Box
6407 4296 Box
6407 4296 Box
6417 4338 Box
6417 4338 Box
6458 600 Box
6458 600 Box
6460 642 Box
6460 642 Box
6530 684 Box
6530 684 Box
6534 726 Box
6534 726 Box
6537 768 Box
6537 768 Box
6597 810 Box
6597 810 Box
6599 852 Box
6599 852 Box
6654 894 Box
6654 894 Box
6656 936 Box
6656 936 Box
6683 978 Box
6683 978 Box
6695 1020 Box
6695 1020 Box
6749 1062 Box
6749 1062 Box
6750 1104 Box
6750 1104 Box
6812 1104 Box
6812 1104 Box
6814 1104 Box
6814 1104 Box
6826 1104 Box
900 4800 Box
2011 4437 Box
1.000 UP
1.000 UL
LT2
1.000 UL
LTb
900 4800 N
900 600 L
5960 0 V
0 4200 V
-5960 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
